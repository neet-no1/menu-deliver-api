package jp.co.suyama.menu.deliver.mapper.auto;

import java.util.List;
import jp.co.suyama.menu.deliver.model.db.Articles;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface ArticlesMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table articles
	 * @mbg.generated  Wed Mar 24 14:49:18 JST 2021
	 */
	@Delete({ "delete from articles", "where id = #{id,jdbcType=INTEGER}" })
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table articles
	 * @mbg.generated  Wed Mar 24 14:49:18 JST 2021
	 */
	@Insert({ "insert into articles (id, user_id, ", "title, start_sentence, ", "opened, created_at, ", "updated_at)",
			"values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
			"#{title,jdbcType=VARCHAR}, #{startSentence,jdbcType=VARCHAR}, ",
			"#{opened,jdbcType=BIT}, #{createdAt,jdbcType=TIMESTAMP}, ", "#{updatedAt,jdbcType=TIMESTAMP})" })
	int insert(Articles record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table articles
	 * @mbg.generated  Wed Mar 24 14:49:18 JST 2021
	 */
	@Select({ "select", "id, user_id, title, start_sentence, opened, created_at, updated_at", "from articles",
			"where id = #{id,jdbcType=INTEGER}" })
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "user_id", property = "userId", jdbcType = JdbcType.INTEGER),
			@Result(column = "title", property = "title", jdbcType = JdbcType.VARCHAR),
			@Result(column = "start_sentence", property = "startSentence", jdbcType = JdbcType.VARCHAR),
			@Result(column = "opened", property = "opened", jdbcType = JdbcType.BIT),
			@Result(column = "created_at", property = "createdAt", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "updated_at", property = "updatedAt", jdbcType = JdbcType.TIMESTAMP) })
	Articles selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table articles
	 * @mbg.generated  Wed Mar 24 14:49:18 JST 2021
	 */
	@Select({ "select", "id, user_id, title, start_sentence, opened, created_at, updated_at", "from articles" })
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "user_id", property = "userId", jdbcType = JdbcType.INTEGER),
			@Result(column = "title", property = "title", jdbcType = JdbcType.VARCHAR),
			@Result(column = "start_sentence", property = "startSentence", jdbcType = JdbcType.VARCHAR),
			@Result(column = "opened", property = "opened", jdbcType = JdbcType.BIT),
			@Result(column = "created_at", property = "createdAt", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "updated_at", property = "updatedAt", jdbcType = JdbcType.TIMESTAMP) })
	List<Articles> selectAll();

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table articles
	 * @mbg.generated  Wed Mar 24 14:49:18 JST 2021
	 */
	@Update({ "update articles", "set user_id = #{userId,jdbcType=INTEGER},", "title = #{title,jdbcType=VARCHAR},",
			"start_sentence = #{startSentence,jdbcType=VARCHAR},", "opened = #{opened,jdbcType=BIT},",
			"created_at = #{createdAt,jdbcType=TIMESTAMP},", "updated_at = #{updatedAt,jdbcType=TIMESTAMP}",
			"where id = #{id,jdbcType=INTEGER}" })
	int updateByPrimaryKey(Articles record);
}