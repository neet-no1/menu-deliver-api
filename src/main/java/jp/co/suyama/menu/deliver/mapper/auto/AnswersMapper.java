package jp.co.suyama.menu.deliver.mapper.auto;

import java.util.List;
import jp.co.suyama.menu.deliver.model.db.Answers;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface AnswersMapper {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table answers
	 * @mbg.generated  Fri Mar 19 20:01:37 JST 2021
	 */
	@Delete({ "delete from answers", "where id = #{id,jdbcType=INTEGER}" })
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table answers
	 * @mbg.generated  Fri Mar 19 20:01:37 JST 2021
	 */
	@Insert({ "insert into answers (id, question_id, ", "user_id, contents, ", "created_at, updated_at)",
			"values (#{id,jdbcType=INTEGER}, #{questionId,jdbcType=INTEGER}, ",
			"#{userId,jdbcType=INTEGER}, #{contents,jdbcType=VARCHAR}, ",
			"#{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})" })
	int insert(Answers record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table answers
	 * @mbg.generated  Fri Mar 19 20:01:37 JST 2021
	 */
	@Select({ "select", "id, question_id, user_id, contents, created_at, updated_at", "from answers",
			"where id = #{id,jdbcType=INTEGER}" })
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "question_id", property = "questionId", jdbcType = JdbcType.INTEGER),
			@Result(column = "user_id", property = "userId", jdbcType = JdbcType.INTEGER),
			@Result(column = "contents", property = "contents", jdbcType = JdbcType.VARCHAR),
			@Result(column = "created_at", property = "createdAt", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "updated_at", property = "updatedAt", jdbcType = JdbcType.TIMESTAMP) })
	Answers selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table answers
	 * @mbg.generated  Fri Mar 19 20:01:37 JST 2021
	 */
	@Select({ "select", "id, question_id, user_id, contents, created_at, updated_at", "from answers" })
	@Results({ @Result(column = "id", property = "id", jdbcType = JdbcType.INTEGER, id = true),
			@Result(column = "question_id", property = "questionId", jdbcType = JdbcType.INTEGER),
			@Result(column = "user_id", property = "userId", jdbcType = JdbcType.INTEGER),
			@Result(column = "contents", property = "contents", jdbcType = JdbcType.VARCHAR),
			@Result(column = "created_at", property = "createdAt", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "updated_at", property = "updatedAt", jdbcType = JdbcType.TIMESTAMP) })
	List<Answers> selectAll();

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table answers
	 * @mbg.generated  Fri Mar 19 20:01:37 JST 2021
	 */
	@Update({ "update answers", "set question_id = #{questionId,jdbcType=INTEGER},",
			"user_id = #{userId,jdbcType=INTEGER},", "contents = #{contents,jdbcType=VARCHAR},",
			"created_at = #{createdAt,jdbcType=TIMESTAMP},", "updated_at = #{updatedAt,jdbcType=TIMESTAMP}",
			"where id = #{id,jdbcType=INTEGER}" })
	int updateByPrimaryKey(Answers record);
}